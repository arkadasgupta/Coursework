    //    int *vertexArrayDevice, *edgeArrayDevice;
    //    float *weightArrayDevice, *gCostArrayDevice, *hCostArrayDevice , *fCostArrayDevice;
    //    bool *visitedArrayDevice;
    //CoordinateData *coordinateArrayDevice;

    /* Allocate and populate buffers */
    //    cudaMalloc((void**)&vertexArrayDevice,(graph.vertexCount)*sizeof(int));
    //    cudaMalloc((void**)&edgeArrayDevice,(graph.edgeCount)*sizeof(int));
    //    cudaMalloc((void**)&weightArrayDevice,(graph.edgeCount)*sizeof(float));
    //    cudaMalloc((void**)&gCostArrayDevice,(graph.vertexCount)*sizeof(float));
    //    cudaMalloc((void**)&hCostArrayDevice,(graph.vertexCount)*sizeof(float));
    //    cudaMalloc((void**)&fCostArrayDevice,(graph.vertexCount)*sizeof(float));
    //    cudaMalloc((void**)&visitedArrayDevice,(graph.vertexCount)*sizeof(bool));
    //    cudaMalloc((void**)&coordinateArrayDevice,(graph.vertexCount)*sizeof(CoordinateData));
    //    
    //    cudaMemcpy(vertexArrayDevice, graph.vertexArray, (graph.vertexCount)*sizeof(int), cudaMemcpyHostToDevice);
    //    cudaMemcpy(edgeArrayDevice, graph.edgeArray, (graph.edgeCount)*sizeof(int), cudaMemcpyHostToDevice);
    //    cudaMemcpy(weightArrayDevice, graph.weightArray, (graph.edgeCount)*sizeof(float), cudaMemcpyHostToDevice);
    //    cudaMemcpy(gCostArrayDevice, gCostArray, (graph.vertexCount)*sizeof(float), cudaMemcpyHostToDevice);
    //    cudaMemcpy(hCostArrayDevice, hCostArray, (graph.vertexCount)*sizeof(float), cudaMemcpyHostToDevice);
    //    cudaMemcpy(fCostArrayDevice, fCostArray, (graph.vertexCount)*sizeof(float), cudaMemcpyHostToDevice);
    //    cudaMemcpy(visitedArrayDevice, visitedArray, (graph.vertexCount)*sizeof(bool), cudaMemcpyHostToDevice);
    //    
    /* Allocate and populate buffers */